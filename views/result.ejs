<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="robots" content="index, follow">
    <meta name="description" content="Java线程分析结果，包含线程状态统计、线程组分析和潜在问题检测">
    <link rel="canonical" href="https://www.threadanalyzer.online/analyze-results">
    <title id="page-title">分析结果</title>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-4671540604964967"
     crossorigin="anonymous"></script>
    <style>
        body {
            font-family: Arial, sans-serif;
            line-height: 1.6;
            margin: 0;
            padding: 20px;
            background-color: #f5f5f5;
            color: #333;
        }
        .container {
            max-width: 1000px;
            margin: 0 auto;
            background: white;
            padding: 25px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            position: relative;
        }
        h1 {
            color: #2c3e50;
            border-bottom: 2px solid #eee;
            padding-bottom: 10px;
            margin-top: 0;
        }
        h2 {
            color: #3498db;
            margin-top: 30px;
        }
        h3 {
            color: #2980b9;
            margin-top: 25px;
        }
        h4 {
            color: #16a085;
            margin: 0 0 10px 0;
        }
        .stats { 
            margin: 20px 0; 
        }
        .issue { 
            color: #e74c3c; 
            margin: 10px 0;
            padding: 10px;
            background-color: #fadbd8;
            border-left: 4px solid #e74c3c;
            border-radius: 4px;
        }
        .thread-group {
            margin: 15px 0;
            padding: 15px;
            border: 1px solid #eee;
            border-radius: 6px;
            background-color: #f9f9f9;
        }
        .thread-group:hover {
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }
        ul {
            padding-left: 20px;
        }
        li {
            margin: 5px 0;
        }
        details {
            margin: 10px 0;
        }
        summary {
            cursor: pointer;
            color: #3498db;
            font-weight: bold;
        }
        summary:hover {
            color: #2980b9;
        }
        .back-link {
            display: inline-block;
            margin-top: 30px;
            padding: 10px 20px;
            background: #3498db;
            color: white;
            border-radius: 4px;
            text-decoration: none;
            transition: background 0.3s;
        }
        .back-link:hover {
            background: #2980b9;
        }
        .status-count {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            margin-bottom: 20px;
        }
        .status-item {
            padding: 10px 15px;
            border-radius: 4px;
            background: #f0f0f0;
            flex-grow: 1;
            text-align: center;
        }
        .status-RUNNABLE { background-color: #d5f5e3; }
        .status-BLOCKED { background-color: #fadbd8; }
        .status-WAITING { background-color: #ebdef0; }
        .status-TIMED_WAITING { background-color: #fdebd0; }
        .language-switch {
            position: absolute;
            top: 10px;
            right: 10px;
            display: flex;
            align-items: center;
            gap: 10px;
        }
        .language-select {
            padding: 5px 10px;
            border: none;
            background-color: transparent;
            color: #333;
            cursor: pointer;
            font-size: 20px;
        }
        .language-select:focus {
            outline: none;
        }
        .blog-btn {
            background-color: transparent;
            color: #333;
            border: none;
            padding: 5px 10px;
            margin-right: 5px;
            cursor: pointer;
            font-size: 20px;
            text-decoration: none;
        }
        .blog-btn:hover {
            text-decoration: underline;
        }
    </style>
</head>
<body>
    <div class="container">
        <!-- 语言切换按钮 -->
        <div class="language-switch">
            <a href="/blog" class="blog-btn" id="blog-btn">博客</a>
            <select class="language-select" id="language-select" onchange="switchLanguage(this.value)">
                <option value="en">English</option>
                <option value="zh">简体中文</option>
            </select>
        </div>
        
        <h1 id="result-title">Analysis Results</h1>
        
        <div id="analyzed-file">
            <span id="file-label">Analyzed File:</span>
            <span id="file-name"><%= analysis.fileName %></span>
        </div>
        
        <div class="stats">
            <h2 id="stats-title">线程统计</h2>
            <p><strong id="total-threads-label">总线程数:</strong> <%= analysis.totalThreads %></p>
            
            <h3 id="state-distribution-title">状态分布</h3>
            <div class="status-count">
                <% Object.entries(analysis.stateCount).forEach(([state, count]) => { %>
                    <div class="status-item status-<%= state %>">
                        <strong><%= state %></strong><br>
                        <span class="thread-count-text"><%= count %></span> <span id="threads-text">个线程</span><br>
                        <small>(<%= (count / analysis.totalThreads * 100).toFixed(1) %>%)</small>
                    </div>
                <% }) %>
            </div>
            
            <h3 id="thread-groups-title">线程组统计（Top 10）</h3>
            <% if (analysis.threadGroups && Object.keys(analysis.threadGroups).length > 0) { %>
                <% Object.entries(analysis.threadGroups)
                    .sort(([aName, aInfo], [bName, bInfo]) => bInfo.count - aInfo.count)
                    .slice(0, 10)
                    .forEach(([groupName, info]) => { %>
                    <div class="thread-group">
                        <h4><%= groupName %></h4>
                        <p><strong id="thread-count-label">线程数量:</strong> <%= info.count %><span id="instance-groups-text">（包含 <%= info.instances.size %> 个实例组）</span></p>
                         <!-- 修改详情页链接样式 -->
                        <a href="/thread-group-details/<%= encodeURIComponent(groupName) %>" class="group-details-link" id="group-details-link-<%= groupName.replace(/\s+/g, '-') %>">
                            <span class="details-text">查看详情</span>
                            <span class="details-icon">→</span>
                        </a>
                        <% if (info.instances.size > 0) { %>
                            <details>
                                <summary id="view-instances-text">查看实例组</summary>
                                <ul>
                                    <% Array.from(info.instances).forEach(instance => { %>
                                        <li>
                                            <a href="/thread-group/<%= encodeURIComponent(instance) %>" target="_blank">
                                                <%= instance %>
                                            </a>
                                        </li>
                                    <% }) %>
                                </ul>
                            </details>
                        <% } %>
                        <strong id="state-distribution-label">状态分布:</strong>
                        <ul>
                            <% Object.entries(info.states)
                                .sort(([aState, aCount], [bState, bCount]) => bCount - aCount)
                                .forEach(([state, count]) => { %>
                                <li><%= state %>: <%= count %></li>
                            <% }) %>
                        </ul>
                    </div>
                <% }) %>
            <% } else { %>
                <p id="no-thread-groups-text">未检测到线程组</p>
            <% } %>
        </div>

        <div class="issues">
            <h2 id="potential-issues-title">潜在问题</h2>
            <% if (analysis.potentialIssues.length === 0) { %>
                <p id="no-issues-text">未发现明显问题</p>
            <% } else { %>
                <% analysis.potentialIssues.forEach(issue => { %>
                    <div class="issue"><%= issue %></div>
                <% }) %>
            <% } %>
        </div>

        <div style="text-align: center;">
            <a href="/" class="back-link" id="back-link">← 返回首页</a>
        </div>
    </div>

    <script>
        // 初始化语言设置
        function initLanguage() {
            // 从本地存储获取语言设置，默认为英文
            const lang = localStorage.getItem('preferredLanguage') || 'en';
            document.getElementById('language-select').value = lang;
            switchLanguage(lang);
        }

        // 切换语言
        function switchLanguage(lang) {
            // 保存语言偏好
            localStorage.setItem('preferredLanguage', lang);
            
            // 更新UI
            if (lang === 'en') {
                document.getElementById('page-title').innerText = 'Analysis Results';
                document.getElementById('result-title').innerText = 'Analysis Results';
                document.getElementById('stats-title').innerText = 'Thread Statistics';
                document.getElementById('total-threads-label').innerText = 'Total Threads:';
                document.getElementById('state-distribution-title').innerText = 'State Distribution';
                document.getElementById('thread-groups-title').innerText = 'Thread Groups (Top 10)';
                document.getElementById('potential-issues-title').innerText = 'Potential Issues';
                document.getElementById('back-link').innerText = '← Back to Home';
                document.getElementById('blog-btn').innerText = 'Blog';
                
                // 更新所有线程数量文本
                document.querySelectorAll('.thread-count-text').forEach(el => {
                    el.nextElementSibling.innerText = ' threads';
                });
                
                // 更新其他标签
                if (document.getElementById('no-thread-groups-text')) {
                    document.getElementById('no-thread-groups-text').innerText = 'No thread groups detected';
                }
                if (document.getElementById('no-issues-text')) {
                    document.getElementById('no-issues-text').innerText = 'No obvious issues found';
                }
                
                // 更新所有实例组文本
                document.querySelectorAll('#thread-count-label').forEach(el => {
                    el.innerText = 'Thread Count:';
                });
                document.querySelectorAll('#instance-groups-text').forEach(el => {
                    const count = el.innerText.match(/\d+/)[0];
                    el.innerText = ` (contains ${count} instance groups)`;
                });
                document.querySelectorAll('#view-instances-text').forEach(el => {
                    el.innerText = 'Threads in this group:';
                });
                document.querySelectorAll('#state-distribution-label').forEach(el => {
                    el.innerText = 'State Distribution:';
                });
                // 更新所有详情链接文本
                document.querySelectorAll('.details-text').forEach(el => {
                    el.innerText = 'View Details';
                });
            } else {
                document.getElementById('page-title').innerText = '分析结果';
                document.getElementById('result-title').innerText = '分析结果';
                document.getElementById('stats-title').innerText = '线程统计';
                document.getElementById('total-threads-label').innerText = '总线程数:';
                document.getElementById('state-distribution-title').innerText = '状态分布';
                document.getElementById('thread-groups-title').innerText = '线程组统计（Top 10）';
                document.getElementById('potential-issues-title').innerText = '潜在问题';
                document.getElementById('back-link').innerText = '← 返回首页';
                document.getElementById('blog-btn').innerText = '博客';
                
                // 更新所有线程数量文本
                document.querySelectorAll('.thread-count-text').forEach(el => {
                    el.nextElementSibling.innerText = ' 个线程';
                });
                
                // 更新其他标签
                if (document.getElementById('no-thread-groups-text')) {
                    document.getElementById('no-thread-groups-text').innerText = '未检测到线程组';
                }
                if (document.getElementById('no-issues-text')) {
                    document.getElementById('no-issues-text').innerText = '未发现明显问题';
                }
                
                // 更新所有实例组文本
                document.querySelectorAll('#thread-count-label').forEach(el => {
                    document.getElementById('file-label').innerText = 'Analyzed File:';
                    el.innerText = '线程数量:';
                });
                document.querySelectorAll('#instance-groups-text').forEach(el => {
                    const count = el.innerText.match(/\d+/)[0];
                    el.innerText = `（包含 ${count} 个实例组）`;
                });
                document.querySelectorAll('#view-instances-text').forEach(el => {
                    el.innerText = '查看组内线程';
                });
                document.querySelectorAll('#state-distribution-label').forEach(el => {
                    el.innerText = '状态分布:';
                });
                 // 更新所有详情链接文本
                document.querySelectorAll('.details-text').forEach(el => {
                    el.innerText = '查看详情';
                });
            }
        }

        // 页面加载时初始化语言
        window.onload = initLanguage;
    </script>
    <div style="display: none;">
        <!-- Google tag (gtag.js) -->
        <script async src="https://www.googletagmanager.com/gtag/js?id=G-CT1MXSWBWX"></script>
        <script>
        window.dataLayer = window.dataLayer || [];
        function gtag(){dataLayer.push(arguments);}
        gtag('js', new Date());

        gtag('config', 'G-CT1MXSWBWX');
        </script>
    </div>
</body>
</html>